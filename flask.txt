import os
from doctest import debug
from flask import Flask, render_template, request, session, redirect, flash, send_file
from flask.sessions import SecureCookieSession

from werkzeug.utils import secure_filename
from DBConnection import Db
from datetime import datetime


app = Flask(__name__, template_folder='templates', static_url_path='/static/')
UPLOAD_FOLDER = './static'
ALLOWED_EXTENSIONS = {'pdf'}
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.secret_key = "asdff"

@app.route('/')
def h():
    return render_template("login.html")

@app.route('/logout')
def logout():
    return render_template("login.html")

@app.route('/sign')
def sign():
    return render_template("sign_up.html")

@app.route('/admin_home')
def admin_home():
    return render_template("admin_home.html")

@app.route('/staff_home')
def staff_home():
    return render_template("staff_home.html")
@app.route('/user_view_degree')
def user_view_degree():
    ob = Db()
    q = "select * from degree"
    cdata = ob.select(q)
    return render_template("user_view_degree.html", cdata=cdata)

@app.route('/student_home')
def student_home():
    return render_template("student_home.html")

@app.route('/login', methods=['post'])
def login():
    userid = request.form['userid']
    password = request.form['password']

    ob = Db()
    qry = "select * from login where admin_id='" + userid + "' and password='" + password + "'"
    admin = ob.selectOne(qry)
    if admin ==None:
        qry = "select * from staff_register where user_id='" + userid + "' and password='" + password + "'"
        staff=ob.selectOne(qry)
        if staff==None:
            qry = "select * from student_register where user_id='" + userid + "' and password='" + password + "'"
            student = ob.selectOne(qry)
            if student==None:
                return redirect("login")
            else:
                session['userid'] = userid
                return student_home()


        else:
            session['userid'] = userid
            return staff_home()
    else:
        session['userid'] = userid
        return admin_home()

@app.route('/signup', methods=['post'])
def signup():
    user_id = request.form['user_id']
    ob = Db()
    qry = "select * from login where admin_id='" + userid + "'"
    admin = ob.selectOne(qry)
    if admin == None:
        qry = "select * from staff_register where user_id='" + userid + "'"
        staff = ob.selectOne(qry)
        if staff == None:
            name = request.form['name']
            address = request.form['address']
            email = request.form['email']
            phone = request.form['phone']
            course = request.form['course']
            password = request.form['password']
            ob = Db()
            q = "insert into student_register values('" + str(user_id) + "','" + str(name) + "','" + str(
                address) + "','" + str(email) + "','" + str(phone) + "','" + str(course) + "','" + str(password) + "')"
            ob.insert(q)
            return login()
        else:
            return "<script>alert('please enter a unique userid');window.location='/sign';</script>"
    else:
        return "<script>alert('please enter a unique userid');window.location='/sign';</script>"





@app.route('/register_degree_link')
def register_degree_link():
    return render_template("register_degree.html")

@app.route('/register_degree', methods=['post'])
def register_degree():
    name = request.form['name']
    txtdes = request.form['txtdes']
    ob = Db()
    q = "insert into degree values(null,'" + name + "','" + txtdes + "')"
    ob.insert(q)  
    return admin_hom e()


@app.route('/view_all_degree')
def view_all_degree():
    ob=Db()
    q = "select * from degree"
    cdata=ob.select(q)
    return render_template("view_all_degree.html", cdata=cdata)

@app.route('/delete_degree')
def delete_degree():
    id = request.args.get('id')
    ob = Db()
    q = "delete from degree where iddegree='"+str(id)+"'"
    ob.delete(q)
    return view_all_degree()

@app.route('/edit_degree_link')
def edit_degree():
    id = request.args.get('id')
    ob = Db()
    q = "select * from degree where iddegree='"+str(id)+"'"
    data = ob.selectOne(q)
    return render_template("edit_degree.html", data=data)

@app.route('/update_degree', methods=['post'])
def update_degree():
    id = request.form['id']
    name = request.form['txtname']
    txtdes=request.form['txtdes']
    ob = Db()
    q = "update degree  set name='" + name + "' where iddegree='" + id + "'"
    ob.update(q)
    q = "update degree set description='" + txtdes + "' where iddegree = '" + id + "' "
    ob.update(q)
    return view_all_degree()
@app.route('/register_subject')
def register_subject():
    id = request.args.get('id')
    session['iddegree'] = id
    return render_template('register_subject.html', cdata=id)


@app.route('/register_sub', methods=['post'])
def register_sub():
    iddegree= session['iddegree']
    name = request.form['name']
    semester = request.form['semester']
    ob = Db()
    q = "insert into subject values(null,'" + name + "','" + semester + "','" + iddegree + "')"
    ob.insert(q)
    return view_subject()

@app.route('/view_subject')
def view_subject():
    iddegree = session['iddegree']
    ob = Db()
    q = "select * from subject where iddegree='" + iddegree + "' "
    data = ob.select(q)
    return render_template('view_subjects.html', cdata=data)

@app.route('/user_view_subject', methods=['post'])
def user_view_subject():
    iddegree = request.form['iddegree']
    session['uiddegree'] = iddegree
    ob = Db()
    q = "select * from subject where iddegree='" + iddegree + "' "
    data = ob.select(q)
    return render_template('user_view_subject.html', cdata=data)



@app.route('/view_all_subject')#optional
def view_all_subject():
    ob = Db()
    q = "select * from subject  "
    data = ob.select(q)
    return render_template('view_subjects.html', cdata=data)

@app.route('/delete_subject', methods=['post'])
def delete_subject():
    idsub = request.form['idsub']
    ob = Db()
    print(id)
    q = "delete from subject where idsubject='"+str(idsub)+"'"
    ob.delete(q)
    return view_subject()


@app.route('/edit_subject_link', methods=['post'])
def edit_subject():
    idsub = request.form['idsub']
    session['idsub'] = idsub
    ob = Db()
    q = "select * from subject where idsubject ='"+str(idsub)+"'"
    data = ob.selectOne(q)
    return render_template("edit_subject.html", data=data)


@app.route('/update_subject', methods=['post'])
def update_subject():
    id = session['idsub']
    name = request.form['name']
    semester=request.form['semester']
    ob = Db()
    q = "update subject  set name='" + name + "' where idsubject='" + id + "'"
    ob.update(q)
    q = "update subject set semester='" + semester + "' where idsubject = '" + id + "' "
    ob.update(q)
    return view_subject()


@app.route('/register_staff')
def register_staff():
    return render_template("register_staff.html")

@app.route('/reg_staff', methods=['post'])
def reg_staff():
    userid = request.form['userid']
    name = request.form['name']
    address = request.form['address']
    email = request.form['email']
    phone = request.form['phone']
    password = request.form['password']
    ob = Db()

    qry = "select * from login where admin_id='" + userid + "' "
    admin = ob.selectOne(qry)
    if admin == None:
        qry = "select * from staff_register where user_id='" + userid + "' "
        staff = ob.selectOne(qry)
        if staff == None:
            qry = "select * from student_register where user_id='" + userid + "' "
            student = ob.selectOne(qry)
            if student == None:
                ob = Db()
                q = "insert into staff_register values('" + userid + "','" + name + "','" + address + "','" + email + "','" + phone + "','" + password + "')"
                ob.insert(q)
                return view_all_staff()
            return "<script>alert('please enter a unique userid');window.location='/register_staff';</script>"
        return "<script>alert('please enter a unique userid');window.location='/register_staff';</script>"
    return "<script>alert('please enter a unique userid');window.location='/register_staff';</script>"


@app.route('/view_all_staff')
def view_all_staff():
    ob=Db()
    qry = "select * from staff_register"
    staff = ob.select(qry)

    return render_template("view_all_staff.html", staff=staff)

@app.route('/delete_staff')
def delete_staff():
    id = request.args.get('id')
    ob = Db()
    q = "delete from staff_register where user_id='"+str(id)+"'"
    ob.delete(q)
    return view_all_staff()

@app.route('/edit_staff_link')
def edit_staff():
    id = request.args.get('id')
    ob = Db()
    q = "select * from staff_register where user_id='"+str(id)+"'"
    data = ob.selectOne(q)
    return render_template("edit_staff.html", data=data)

@app.route('/update_staff', methods=['post'])
def update_staff():
    id = request.form['userid']
    name = request.form['name']
    address = request.form['address']
    email = request.form['email']
    phone = request.form['phone']
    password = request.form['password']
    ob = Db()
    qry = "update staff_register  set name='" + name + "' where user_id='" + id + "'"
    ob.update(qry)
    qry = "update staff_register set address='" + address + "' where user_id = '" + id + "' "
    ob.update(qry)
    qry = "update staff_register  set email='" + email + "' where user_id='" + id + "'"
    ob.update(qry)
    qry = "update staff_register set phone='" + phone + "' where user_id = '" + id + "' "
    ob.update(qry)
    qry = "update staff_register  set password='" + password + "' where user_id='" + id + "'"
    ob.update(qry)
    return view_all_staff()

@app.route('/upload_file', methods=['post'])
def upload_file():
    uidsub= request.form['idsub']
    usemester=request.form['semester']
    session['uidsub'] = uidsub
    session['usemester']=usemester
    return render_template('upload_file.html' )

@app.route('/uploading', methods=['post'])
def uploading():
    semester=session['usemester']
    iddegree=session['uiddegree']
    idsubject = session['uidsub']
    user_id=session['userid']
    file = request.files['file']
    if file:
        filename = secure_filename(file.filename)
        print(filename)
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
    ob = Db()
    q = "insert into notes values(null,'" + semester + "','" + iddegree + "','" + idsubject + "','" + user_id + "','static/" + filename + "',curdate(),'pending')"
    ob.insert(q)
    return "<script>alert('Uploaded succesfully');window.location='/user_view_files';</script>"

@app.route('/user_view_files')
def user_view_files():
    ob = Db()
    q =" select * from notes where user_id='"+session['userid']+"' and status='pending'"
    data=ob.select(q)
    ob = Db()
    q = " select * from notes where user_id='" + session['userid'] + "' and status='approved' "
    adata = ob.select(q)
    return render_template('user_view_files.html', data=data, adata= adata)

@app.route('/pending_view_files')
def pending_view_files():
    ob = Db()
    q =" select * from notes where status='pending'"
    data=ob.select(q)
    return render_template('pending_files.html', data=data)
@app.route('/update_file', methods=['post'])
def update_file():
    idnote = request.form['idnote']
    session['updateidnote']=idnote
    ob = Db()
    q = " select * from notes where idnote='"+idnote+"'"
    data = ob.selectOne(q)
    return render_template('update_file.html',data=data)



@app.route('/updating_status_file', methods=['post'])
def updating_status_file():
    idnote=session['updateidnote']

    status=request.form['status']
    ob = Db()
    q = "update notes set status='" + status + "' where idnote = '" + idnote + "' "
    ob.update(q)
    return view_all_files()


@app.route('/user_view_all_files')
def user_view_all_files():
    ob= Db()
    q = " select * from notes where status='approved' "
    data = ob.select(q)
    return render_template('user_view_all_files.html', data=data)

@app.route('/view_all_files')
def view_all_files():
    ob= Db()
    q = " select * from notes where status='approved' "
    data = ob.select(q)
    return render_template('view_all_files.html', data=data)

@app.route('/delete_file', methods=['post'])
def delete_file():
    idnote =request.form['idnote']
    ob = Db()
    q = "delete from notes where idnote='"+idnote+"' "
    ob.delete(q)
    return user_view_files()
@app.route('/user_download_file')
def download_file():
    filepath = request.args.get('id')
    return send_file(filepath, as_attachment=True)


if __name__ == '__main__':
    app.run(debug=True)

